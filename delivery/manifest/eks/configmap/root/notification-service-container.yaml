# Copyright 2022 NEC Corporation
# Released under the MIT license.
# https://opensource.org/licenses/mit-license.php
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: root-notification-service-container-config-map
  namespace: <namespace>
data:
  default.yml: |
    # SDE-IMPL-RECOMMENDED REST API サーバーのポート番号を指定します
    ports:
      http: 3004

    # SDE-IMPL-RECOMMENDED ログレベルを次のいずれかを設定します[none/debug/info]
    loglevel: info

    # SDE-MSA-PRIN 過負荷を回避する （MSA-PRIN-ID-02）
    # SDE-IMPL-RECOMMENDED Backpressureの設定をします
    backPressure:
      threshold: 10000  # 同時実行数しきい値

    operatorService:
      session: http://localhost:3000/operator/session/
      operator: http://localhost:3000/operator

    proxyService:
      proxy: http://localhost:3003/pxr-block-proxy

    catalogService:
      get: http://localhost:3001/catalog/

    bookManageService:
      postSearchUser: http://localhost:3005/book-manage/search/user

    defaultExpiration: 7
    timezone: Asia/Tokyo
  log4js.config.json: |
    {
      "appenders": {
        "ConsoleLogAppender": {
          "type": "console"
        },
        "SystemLogAppender": {
          "type": "dateFile",
          "filename": "./logs/system.log",
          "pattern": ".yyyy-MM-dd",
          "daysToKeep": 30,
          "alwaysIncludePattern": false,
          "layout": {
            "type": "pattern",
            "pattern": "[%d{yyyy-MM-dd hh:mm:ss.SSS}] [%p] %m"
          }
        },
        "HttpLogAppender": {
          "type": "dateFile",
          "filename": "./logs/http.log",
          "pattern": ".yyyy-MM-dd",
          "daysToKeep": 30,
          "alwaysIncludePattern": false,
          "layout": {
            "type": "pattern",
            "pattern": "[%d{yyyy-MM-dd hh:mm:ss.SSS}] [%p] [%x{sessionId}] [%x{requestId}] %m"
          }
        },
        "AccessLogAppender": {
          "type": "dateFile",
          "filename": "./logs/access.log",
          "pattern": ".yyyy-MM-dd",
          "daysToKeep": 30,
          "alwaysIncludePattern": false,
          "layout": {
            "type": "pattern",
            "pattern": "[%d{yyyy-MM-dd hh:mm:ss.SSS}] [%p] [%x{sessionId}] [%x{requestId}] %m"
          }
        },
        "ApplicationLogAppender": {
          "type": "dateFile",
          "filename": "./logs/application.log",
          "pattern": ".yyyy-MM-dd",
          "daysToKeep": 30,
          "alwaysIncludePattern": false,
          "layout": {
            "type": "pattern",
            "pattern": "[%d{yyyy-MM-dd hh:mm:ss.SSS}] [%p] [%x{sessionId}] [%x{requestId}] %m"
          }
        }
      },
      "replaceConsole": true,
      "categories": {
        "default": {
          "appenders": [
            "ConsoleLogAppender"
          ],
          "level": "all"
        },
        "system": {
          "appenders": [
            "SystemLogAppender"
          ],
          "level": "all"
        },
        "http": {
          "appenders": [
            "HttpLogAppender"
          ],
          "level": "all"
        },
        "access": {
          "appenders": [
            "AccessLogAppender"
          ],
          "level": "all"
        },
        "application": {
          "appenders": [
            "ApplicationLogAppender"
          ],
          "level": "all"
        }
      }
    }
  message.json: |
    {
      "RESPONSE_ERROR": "サービスからのレスポンスの制御処理に失敗しました",
      "UNDEFINED_ERROR": "未定義のエラーが発生しました",
      "REQUEST_IS_EMPTY": "リクエストが空です",
      "NOT_AUTHORIZED": "未ログイン状態でのリクエストはエラーです",
      "FAILED_TAKE_SESSION": "セッション情報の取得に失敗しました",
      "FAILED_TAKE_OPERATOR": "オペレーターの取得に失敗しました",
      "FAILED_TAKE_BOOK": "BOOKの取得に失敗しました",
      "NOT_EXISTS_OPERATOR": "リクエストされたオペレーターは存在しません",
      "FAILED_CONNECT_TO_OPERATOR": "オペレーターサービスとの接続に失敗しました",
      "FAILED_CONNECT_TO_BOOK_MANAGE": "BOOK管理サービスとの接続に失敗しました",
      "FAILED_CONNECT_TO_DATABASE": "データベースとの接続に失敗しました",
      "FAILED_CONNECT_TO_LINKAGE_SERVICE": "連携サービスとの接続に失敗しました",
      "FAILED_SAVE_ENTITY": "データベースへのデータ登録に失敗しました",
      "NOT_EXISTS_TARGET": "更新対象が存在しません",
      "NO_OPERATION_AUTHORITY": "対象を操作する権限がありません",
      "ALREADY_READ": "既読済みです",
      "ALREADY_APPROVAL_OPERATED": "承認操作が完了しています",
      "TARGET_IS_EXPIRED": "対象の承認期限が切れています",
      "TYPE_ERROR": "異常な処理が発生しました",
      "UNEXPECTED_ARRAY_REQUEST": "配列でのリクエストは期待していません",
      "UNEXPECTED_STATUS_NUMBER": "ステータス番号としては期待していない数値です",
      "UNEXPECTED_UNCOMMENT_WITH_UNAPPROVED": "否認操作時にコメントがないことは期待していません",
      "FAILED_LINKAGE": "連携に失敗しました",
      "NOT_EXISTS_NOTIFICATION": "リクエスト条件に一致する通知はありません",
      "UNEXPECTED_OPERATOR_TYPE": "オペレーター種別は期待する数値ではありません",
      "UNEXPECTED_NOTICE_TYPE": "通知種別は期待する数値ではありません",
      "UNEXPECTED_DESTINATION_ARE_NOT_EXISTS_FOR_INDIVIDUALLY_SEND": "個別送信の場合、宛先となるオペレーターIDまたは利用者IDが必要です",
      "UNEXPECTED_IS_BOTH_DESTINATION_ARE_EXISTS": "オペレーターIDと利用者IDを同時に指定することはできません",
      "UNEXPECTED_NOT_SET_NOTICE_URL_WHEN_APPROVAL_TYPE_REQUEST": "指定された通知URLが、URLのパス表現としては不正です",
      "NOT_EXISTS_NOTICE_BLOCK_CODE_WHEN_APPROVAL_TYPE_REQUEST": "通知ブロックを指定してください。",
      "IS_NOT_BLOCK_CATALOG": "リクエストされたカタログは、ブロックのものではありません（コード: %s）",
      "IS_NOT_CATEGORY_CATALOG": "リクエストされたカタログは、カテゴリのものではありません（コード: %s）",
      "NOT_EXISTS_CATALOG": "リクエストされたカタログは存在しません（コード: %s）",
      "NOT_EXISTS_ACTOR": "対象のアクターが存在しません",
      "FAILED_CATALOG_SERVICE": "カタログサービスの内部エラーが発生しました",
      "FAILED_CONNECT_TO_CATALOG": "カタログサービスとの接続に失敗しました",
      "validation": {
        "isArray": "配列ではありません",
        "isBoolean": "真偽値ではありません",
        "isBooleanString": "真偽値への変換に失敗しました",
        "isDate": "日付型ではありません",
        "isDateString": "日付型への変換に失敗しました",
        "isEmail": "Emailアドレスではありません",
        "isEmpty": "この値は空である必要があります",
        "isNumber": "数値ではありません",
        "isNumberString": "数値への変換に失敗しました",
        "isNotEmpty": "この値は空を期待しません",
        "isUUID": "UUIDではありません",
        "isString": "文字列ではありません",
        "isObject": "JSONではありません",
        "isJson": "JSONではありません",
        "isUrl": "このフィールドでは必ずURIではなく、ドメイン以降のパスを指定してください",
        "isDefined": "この値は必須値です"
      }
    }
  openapi.json: |
    {
      "openapi": "3.0.2",
      "info": {
        "title": "notification-service",
        "version": "1.0",
        "description": "通知サービス"
      },
      "servers": [
        {
          "url": "/notification/notification"
        }
      ],
      "paths": {
        "/": {
          "get": {
            "tags": [
              "承認要求通知リスト取得"
            ],
            "description": "オペレーター自身宛の通知、承認要求を取得します。",
            "parameters": [
              {
                "name": "is_send",
                "in": "query",
                "schema": {
                  "type": "boolean"
                },
                "required": true,
                "description": "送信履歴(True: 自分が送信した通知・承認, False: 自分宛に送られた通知・承認)"
              },
              {
                "name": "is_unread",
                "in": "query",
                "schema": {
                  "type": "boolean"
                },
                "required": true,
                "description": "未読フラグ(True: 未読のみ, False: すべて)"
              },
              {
                "name": "is_approval",
                "in": "query",
                "schema": {
                  "type": "boolean"
                },
                "required": true,
                "description": "承認フラグ(True: 承認または非承認ステータスのみ, False: すべて)"
              },
              {
                "name": "type",
                "in": "query",
                "schema": {
                  "type": "number"
                },
                "required": true,
                "description": "通知種別(0: 通知のみ, それ以外: 承認要求)"
              },
              {
                "name": "from",
                "in": "query",
                "schema": {
                  "type": "string"
                },
                "required": false,
                "description": "対象期間(自)(format: yyyy/MM/dd hh:mm:ss)"
              },
              {
                "name": "to",
                "in": "query",
                "schema": {
                  "type": "string"
                },
                "required": false,
                "description": "対象期間(至)(format: yyyy/MM/dd hh:mm:ss)"
              },
              {
                "name": "num",
                "in": "query",
                "schema": {
                  "type": "number"
                },
                "required": true,
                "description": "最大件数(<= 0: 全件, > 0: 指定件数分)"
              }
            ],
            "responses": {
              "200": {
                "description": "レスポンスコード",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "description": "承認要求リスト",
                      "properties": {}
                    }
                  }
                }
              }
            }
          },
          "post": {
            "tags": [
              "通知・承認要求の登録"
            ],
            "description": "通知や承認要求を登録します。",
            "requestBody": {
              "description": "通知",
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "通知エンティティ",
                    "properties": {
                      "type": {
                        "type": "integer",
                        "description": "種別"
                      },
                      "title": {
                        "type": "string",
                        "description": "通知タイトル"
                      },
                      "content": {
                        "type": "string",
                        "description": "通知内容"
                      },
                      "attribute": {
                        "type": "object",
                        "description": "属性"
                      },
                      "destination": {
                        "type": "object",
                        "description": "宛先情報",
                        "properties": {
                          "blockCode": {
                            "type": "integer",
                            "description": "宛先Blockコード"
                          },
                          "operatorType": {
                            "type": "integer",
                            "description": "通知先オペレーター種別",
                            "required": [
                              "0",
                              "1",
                              "2",
                              "3"
                            ]
                          },
                          "isSendAll": {
                            "type": "boolean",
                            "description": "全体送信フラグ",
                            "required": [
                              "true",
                              "false"
                            ]
                          },
                          "operatorId": {
                            "type": "array",
                            "description": "宛先オペレーターID",
                            "items": {
                              "type": "integer",
                              "description": "オペレーターID"
                            }
                          },
                          "userId": {
                            "type": "array",
                            "description": "宛先ユーザーID",
                            "items": {
                              "type": "string",
                              "description": "ユーザーID"
                            }
                          }
                        }
                      },
                      "approval": {
                        "type": "object",
                        "description": "承認情報",
                        "properties": {
                          "noticeUrl": {
                            "type": "string",
                            "description": "通知先URL"
                          },
                          "expirationAt": {
                            "type": "string",
                            "description": "有効期限",
                            "format": "yyyy-MM-dd hh:mm:ss.SSS"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": 1,
                    "title": "承認リクエスト",
                    "content": "テスト: 承認をリクエストします。",
                    "attribute": {
                      "testKey": "testValue"
                    },
                    "destination": {
                      "blockCode": 30303030,
                      "operatorType": 2,
                      "isSendAll": true,
                      "operatorId": null,
                      "userId": null
                    },
                    "approval": {
                      "noticeUrl": "http://service/catalog-update/actor/approval",
                      "expirationAt": "2020-04-01 00:00:00.000"
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "登録された通知",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "description": "通知エンティティ + 登録結果ステータス",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "通知ID"
                        },
                        "type": {
                          "type": "integer",
                          "description": "種別",
                          "required": [
                            "0",
                            "1"
                          ]
                        },
                        "title": {
                          "type": "string",
                          "description": "通知タイトル"
                        },
                        "content": {
                          "type": "string",
                          "description": "通知内容"
                        },
                        "attribute": {
                          "type": "object",
                          "description": "属性"
                        },
                        "destination": {
                          "type": "object",
                          "description": "宛先情報",
                          "properties": {
                            "blockCode": {
                              "type": "integer",
                              "description": "宛先Blockコード"
                            },
                            "operatorType": {
                              "type": "integer",
                              "description": "通知先オペレーター種別",
                              "required": [
                                "0",
                                "1",
                                "2",
                                "3"
                              ]
                            },
                            "isSendAll": {
                              "type": "boolean",
                              "description": "全体送信フラグ",
                              "required": [
                                "true",
                                "false"
                              ]
                            },
                            "operatorId": {
                              "type": "array",
                              "description": "宛先オペレーターID",
                              "items": {
                                "type": "integer",
                                "description": "オペレーターID"
                              }
                            },
                            "userId": {
                              "type": "array",
                              "description": "宛先ユーザーID",
                              "items": {
                                "type": "string",
                                "description": "ユーザーID"
                              }
                            }
                          }
                        },
                        "approval": {
                          "type": "object",
                          "description": "承認情報",
                          "properties": {
                            "expirationAt": {
                              "type": "string",
                              "description": "有効期限",
                              "format": "yyyy-MM-dd hh:mm:ss.SSS"
                            }
                          }
                        },
                        "sendAt": {
                          "type": "string",
                          "description": "送信日時",
                          "format": "yyyy-MM-dd hh:mm:ss.SSS"
                        },
                        "is_transfer": {
                          "type": "boolean",
                          "description": "転送フラグ"
                        }
                      }
                    },
                    "example": {
                      "id": "1",
                      "type": 1,
                      "title": "承認リクエスト",
                      "content": "テスト: 承認をリクエストします。",
                      "attribute": {
                        "testKey": "testValue"
                      },
                      "destination": {
                        "blockCode": 30303030,
                        "operatorType": 2,
                        "isSendAll": true,
                        "operatorId": [],
                        "userId": []
                      },
                      "approval": {
                        "expirationAt": "2020-04-01 24:00:00.000"
                      },
                      "sendAt": "2019-11-29 09:36:54.521",
                      "is_transfer": false
                    }
                  }
                }
              }
            }
          },
          "put": {
            "tags": [
              "既読処理"
            ],
            "description": "通知に対して、読んだ時刻を記録します。",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "既読にする通知ID",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "通知ID"
                      }
                    }
                  },
                  "example": {
                    "id": 1
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "既読処理の結果",
                "content": {
                  "application/json": {
                    "example": {
                      "": "既読しました"
                    }
                  }
                }
              }
            }
          }
        },
        "/approval": {
          "put": {
            "tags": [
              "承認要求への承認"
            ],
            "description": "承認要求に対して承認し、登録されたURLへ承認結果を送信します。",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "承認内容",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "通知ID"
                      },
                      "status": {
                        "type": "integer",
                        "description": "承認ステータス"
                      },
                      "commet": {
                        "type": "string",
                        "description": "コメント"
                      }
                    }
                  },
                  "example": {
                    "id": 1,
                    "status": 2,
                    "comment": "承認に必要な情報が存在しない為、非承認とします。"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "承認処理の結果",
                "content": {
                  "application/json": {
                    "example": {}
                  }
                }
              }
            }
          }
        }
      }
    }
  ormconfig.json: |
    {
      "name": "postgres",
      "type": "postgres",
      "host": "external-db-service",
      "port": 5432,
      "database": "<database_name>",
      "schema": "pxr_notification",
      "username": "<user_name>",
      "password": "<password>",
      "synchronize": false,
      "logging": false
    }
