# Copyright 2022 NEC Corporation
# Released under the MIT license.
# https://opensource.org/licenses/mit-license.php
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: root-certificate-manage-service-container-config-map
  namespace: <namespace>
data:
  config.json: |
    {
      "operatorUrl": "http://localhost:3000/operator",
      "operatorServiceSession": "http://localhost:3000/operator/session/",
      "certificationAuthorityUrl": "http://localhost:3012/certification-authority",
      "timezone": "Asia/Tokyo",
      "pxr-root-block": true
    }
  default.yml: |
    # SDE-IMPL-RECOMMENDED REST API サーバーのポート番号を指定します
    ports:
      http: 3013

    # SDE-IMPL-RECOMMENDED ログレベルを次のいずれかを設定します[none/debug/info]
    loglevel: info

    # SDE-MSA-PRIN 過負荷を回避する （MSA-PRIN-ID-02）
    # SDE-IMPL-RECOMMENDED Backpressureの設定をします
    backPressure:
      threshold: 10000  # 同時実行数しきい値
  log4js.config.json: |
    {
      "appenders": {
        "ConsoleLogAppender": {
          "type": "console"
        },
        "SystemLogAppender": {
          "type": "dateFile",
          "filename": "./logs/system.log",
          "pattern": ".yyyy-MM-dd",
          "daysToKeep": 30,
          "alwaysIncludePattern": false,
          "layout": {
            "type": "pattern",
            "pattern": "[%d{yyyy-MM-dd hh:mm:ss.SSS}] [%p] %m"
          }
        },
        "HttpLogAppender": {
          "type": "dateFile",
          "filename": "./logs/http.log",
          "pattern": ".yyyy-MM-dd",
          "daysToKeep": 30,
          "alwaysIncludePattern": false,
          "layout": {
            "type": "pattern",
            "pattern": "[%d{yyyy-MM-dd hh:mm:ss.SSS}] [%p] [%x{sessionId}] [%x{requestId}] %m"
          }
        },
        "AccessLogAppender": {
          "type": "dateFile",
          "filename": "./logs/access.log",
          "pattern": ".yyyy-MM-dd",
          "daysToKeep": 30,
          "alwaysIncludePattern": false,
          "layout": {
            "type": "pattern",
            "pattern": "[%d{yyyy-MM-dd hh:mm:ss.SSS}] [%p] [%x{sessionId}] [%x{requestId}] %m"
          }
        },
        "ApplicationLogAppender": {
          "type": "dateFile",
          "filename": "./logs/application.log",
          "pattern": ".yyyy-MM-dd",
          "daysToKeep": 30,
          "alwaysIncludePattern": false,
          "layout": {
            "type": "pattern",
            "pattern": "[%d{yyyy-MM-dd hh:mm:ss.SSS}] [%p] [%x{sessionId}] [%x{requestId}] %m"
          }
        }
      },
      "replaceConsole": true,
      "categories": {
        "default": {
          "appenders": [
            "ConsoleLogAppender"
          ],
          "level": "all"
        },
        "system": {
          "appenders": [
            "SystemLogAppender"
          ],
          "level": "all"
        },
        "http": {
          "appenders": [
            "HttpLogAppender"
          ],
          "level": "all"
        },
        "access": {
          "appenders": [
            "AccessLogAppender"
          ],
          "level": "all"
        },
        "application": {
          "appenders": [
            "ApplicationLogAppender"
          ],
          "level": "all"
        }
      }
    }
  message.json: |
    {
      "FAILED_TAKE_OPERATOR": "オペレーターの取得に失敗しました",
      "NOT_EXISTS_OPERATOR": "リクエストされたオペレーターは存在しません",
      "NOT_AUTHORIZED": "未ログイン状態でのリクエストはエラーです",
      "FAILED_CONNECT_TO_DATABASE": "データベースとの接続に失敗しました",
      "FAILED_CONNECT_TO_CERTIFICATION_AUTORITY": "認証局サービスへの接続に失敗しました",
      "FAILED_CERTIFICATION_AUTORITY_CERT_GET": "証明書情報の取得に失敗しました",
      "FAILED_CERTIFICATION_AUTORITY_ACTOR_GET": "アクター情報の取得に失敗しました",
      "CERTIFICATION_AUTORITY_RESPONSE_STATUS": "オペレーターサービスからのステータスコード: %s",
      "CERTIFICATION_AUTORITY_RESPONSE": "オペレーターサービスからのレスポンス: %s",
      "DIFF_CERTIFICATE": "正しくない証明書が指定されました",
      "RESPONSE_ERROR": "サービスからのレスポンスの制御処理に失敗しました",
      "UNDEFINED_ERROR": "未定義のエラーが発生しました",
      "REQUEST_IS_EMPTY": "リクエストが空です",
      "IS_NOT_AUTHORIZATION_SESSION": "セッションは有効ではありません",
      "FAILED_TAKE_SESSION": "セッション取得処理に失敗しました",
      "NO_SESSION": "未ログインです",
      "OPERATOR_NOT_EXISTS": "対象のオペレーターが存在しません",
      "MEMBER_NOT_EXISTS": "運営メンバーが存在しません",
      "SESSION_INVALID": "セッションが有効ではありません",
      "NOW_PASSWORD_INVALID": "現在のパスワードが不正です",
      "NOT_OPERATION_AUTH": "この操作をするための権限がありません",
      "FAILED_SAVE_ENTITY": "データベースへのデータ登録に失敗しました",
      "UNEXPECTED_ARRAY_REQUEST": "配列でのリクエストは期待していません",
      "AUTH_CANT_UPDATED": "authを更新するための権限がありません",
      "NOT_ANOTHER_ALL_AUTH_MEMBER": "他に全権を持った運営メンバーが存在しなくなるため、実行できません",
      "MISSING_REQUIRED_ELEMENT": "attributesに必要な要素が見つかりませんでした",
      "PHONE_NUMBER_NOT_EXISTS": "SMS認証で使用する携帯電話番号が登録されていません",
      "NOT_ALL_AUTH": "全ての操作権限が有効に設定されていません",
      "LOGIN_ID_ALREADY": "対象ログインIDが既に存在します",
      "NOT_ROLE_CATALOG": "ロールのカタログコードではありません",
      "FAILD_GET_CATALOG": "カタログの取得に失敗しました",
      "INIT_PASSWORD_EXPIRED": "初期パスワードの有効期限が切れています",
      "SMS_SEND_CONNECTION_ERR": "SMS送信APIへの接続に失敗しました",
      "AUTH_INFO_INVALID": "ログインIDまたはパスワードが不正です",
      "APP_NAME_INVALID": "アプリケーション名が正しくありません",
      "PXR_LOGIN_CODE_EXPIRED": "PXRログインコードの有効期限が切れています",
      "OPERATOR_RESPONSE_STATUS": "オペレーターサービスからのステータスコード: %s",
      "OPERATOR_RESPONSE": "オペレーターサービスからのレスポンス: %s",
      "CATALOG_RESPONSE_STATUS": "カタログサービスからのステータスコード: %s",
      "CATALOG_RESPONSE": "カタログサービスからのレスポンス: %s",
      "IDENTITY_RESPONSE_STATUS": "本人性確認サービスからのステータスコード: %s",
      "IDENTITY_RESPONSE": "本人性確認サービスからのレスポンス: %s",
      "REQUEST_UNAUTORIZED": "権限が不足しています",
      "REQUEST_UNSUPPORT_MEDIA_TYPE": "サポートされていないContent-Typeが指定されています",
      "REQUEST_PARAMETER_INVALID": "リクエストパラメータが不正です",
      "REQUEST_PARAMETER_JSON_INVALID": "JSONデータの変換に失敗しました",
      "RESPONSE_SUCCESS": "%sに成功しました",
      "RESPONSE_FAIL": "%sに失敗しました",
      "TARGET_NO_DATA": "対象データが見つかりません",
      "PXR_ID_EXISTS": "指定されたPXR-IDは既に登録されています",
      "BOOK_EXISTS": "My-Condition-Bookが既に存在します",
      "NOT_IDENTIFICATION_CATALOG_CODE": "本人性確認以外のカタログコードが含まれています",
      "VERIFICATION_RATIO_NOT_ENOUGH": "本人性確認書類が不足しています",
      "FAILED_SMS_SEND": "smsの送信に失敗しました",
      "SMS_SEND_CONNECTION_ERROR": "smsの接続に失敗しました",
      "LOGIN_CODE_INVALID": "ワンタイムログインコードが不正です",
      "SESSION_NOT_EXISTS": "対象のセッションIDが存在しません",
      "FAILED_OPERATOR_ADD": "オペレーターの追加に失敗しました",
      "FAILED_CONNECT_TO_OPERATOR": "オペレーターサービスへの接続に失敗しました",
      "FAILED_CONNECT_TO_CATALOG": "カタログサービスへの接続に失敗しました",
      "FAILED_CONNECT_TO_IDENTITY": "本人性確認サービスへの接続に失敗しました",
      "FAILED_USER_ID_ADD": "利用者ID連携テーブル登録に失敗しました",
      "FAILED_CATALOG_GET": "カタログ情報の取得に失敗しました",
      "FAILED_IDENTITY_GET": "本人性確認情報の取得に失敗しました",
      "IDENTIFY_NO_COLLATION": "本人情報が一致しません",
      "LOGIN_ID_NOT_EXISTS": "ログインIDがありません",
      "BOOK_COOPERATE_EXISTS": "利用者ID連携が既に存在します",
      "EMPTY_PXR_ID": "PXR-IDが取得できませんでした",
      "ACTOR_CATALOG_INVALID": "指定されたアクターカタログコードは対象アクターのカタログコードではありません",
      "APP_CATALOG_CODE_NOT_EXIST": "指定されたアプリケーションカタログコードがアクターカタログ内にありません",
      "NOT_STORE_CATALOG_CODE": "蓄積可能なデータ定義が見つかりません",
      "NOT_EVENT_CATALOG_CODE": "蓄積可能なデータ定義に指定されたイベントが見つかりませんでした",
      "NOT_THING_CATALOG_CODE": "指定されたイベントにモノカタログコードが紐づいていません",
      "THING_CATALOG_CODE_NOT_EXIST": "イベントに紐づいていないモノカタログコードが指定されています",
      "NOT_EXIST_BOOK": "PXR-IDからブックが取得できませんでした",
      "NOT_FOUND_BOOK_ID": "利用者IDからブックIDが取得できませんでした",
      "NOT_FOUND_DATA_STORE_SETTING": "データ蓄積定義が取得できませんでした",
      "NOT_FOUND_DATA_TYPE": "データ種が取得できませんでした",
      "EMPTY_APP_CATALOG_CODE": "appが指定されていません",
      "OUT_OF_SCOPE": "値が範囲外です",
      "NO_PARAM": "%sが不足しています",
      "FAILED_SAVE_ACTOR_INFO": "オペレーターサービスへのアクター情報の登録に失敗しました",
      "validation": {
        "isArray": "配列ではありません",
        "isBoolean": "真偽値ではありません",
        "isBooleanString": "真偽値への変換に失敗しました",
        "isDate": "日付型ではありません",
        "isDateString": "日付型への変換に失敗しました",
        "isEmail": "Emailアドレスではありません",
        "isEmpty": "この値は空である必要があります",
        "isIn": "値が範囲外です",
        "isNumber": "数値ではありません",
        "isNumberString": "数値への変換に失敗しました",
        "isNotEmpty": "この値は空を期待しません",
        "isUUID": "UUIDではありません",
        "isString": "文字列ではありません",
        "isObject": "JSONではありません",
        "isDefined": "この値は必須値です"
      }
    }
  openapi.json: |
    {
      "openapi": "3.0.2",
      "info": {
        "title": "certificate-manage",
        "version": "1.0",
        "description": "証明書管理サービス"
      },
      "servers": [
        {
          "url": "/certificate-manage/certificate-manage"
        }
      ],
      "paths": {
        "/": {
          "post": {
            "tags": [
              "証明書保存"
            ],
            "description": "ルート証明書、サーバ証明書、クライアント証明書を受け、保存します。",
            "requestBody": {
              "description": "証明書保存",
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "証明書保存のリクエストボディ",
                    "properties": {
                      "certType": {
                        "type": "string",
                        "description": "証明書タイプ",
                        "example": "root"
                      },
                      "serialNo": {
                        "type": "string",
                        "description": "シリアル番号",
                        "example": "XXXXXXXX"
                      },
                      "fingerPrint": {
                        "type": "string",
                        "description": "フィンガープリント",
                        "example": "XX:XX:XX:XX:XX:XX:XX:XX"
                      },
                      "certificate": {
                        "type": "string",
                        "description": "証明書",
                        "example": "-----BEGIN RSA PRIVATE KEY-----\r\nMIGrAgEAAiEAvnrd8LBnzAGxCW+i7KtVQSiTsssMtbwcs5styeKsn2kCAwEAAQIh\r\nAKBF8glb5Xqa0cQG0ygg4hIFdipmvEJhiCuhX93krDCBAhEA51bAM0gFPvxyk9Xe\r\nioIOBQIRANLJEv4Xw7MwT7EEEARL5RUCEBa8bu1bUbCsDPK8nT+NoqUCEQCIzFCU\r\nMY4j7BW8N3vBnhPlAhBgs4tSfe6RbpertixmCygk\r\n-----END RSA PRIVATE KEY-----\r\n-----BEGIN CERTIFICATE-----\r\nMIGrAgEAAiEAvnrd8LBnzAGxCW+i7KtVQSiTsssMtbwcs5styeKsn2kCAwEAAQIh\r\nAKBF8glb5Xqa0cQG0ygg4hIFdipmvEJhiCuhX93krDCBAhEA51bAM0gFPvxyk9Xe\r\nioIOBQIRANLJEv4Xw7MwT7EEEARL5RUCEBa8bu1bUbCsDPK8nT+NoqUCEQCIzFCU\r\nMY4j7BW8N3vBnhPlAhBgs4tSfe6RbpertixmCygk\r\n-----END CERTIFICATE-----"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "証明書の保存に成功した際のレスポンスコード",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "description": "レスポンス",
                      "properties": {
                        "certType": {
                          "type": "string",
                          "example": "root"
                        },
                        "subject": {
                          "type": "object",
                          "properties": {
                            "C": {
                              "type": "string",
                              "example": "JP"
                            },
                            "ST": {
                              "type": "string",
                              "example": "Tokyo"
                            },
                            "L": {
                              "type": "string",
                              "example": "Minato-ku"
                            },
                            "O": {
                              "type": "string",
                              "example": "aaa Corporation"
                            },
                            "OU": {
                              "type": "string",
                              "example": "PXR"
                            },
                            "CN": {
                              "type": "string",
                              "example": "*.---.co.jp"
                            }
                          }
                        },
                        "serialNo": {
                          "type": "string",
                          "example": "2CF1B929DB73BD43DB8206408D0C3073EC2B419B"
                        },
                        "fingerPrint": {
                          "type": "string",
                          "example": "09:FF:AA:8C:44:B4:90:DB:1A:E4:84:59:3E:93:42:1D:FA:5B:F8:13"
                        },
                        "validPeriodStart": {
                          "type": "string",
                          "example": "2020-03-26T21:37:02.000+0900"
                        },
                        "validPeriodEnd": {
                          "type": "string",
                          "example": "2120-03-02T21:37:02.000+0900"
                        },
                        "certificate": {
                          "type": "string",
                          "example": "-----BEGIN RSA PRIVATE KEY-----\r\nMIIEpQIBAAKCAQEAsDwJjxkOwSWufafRvREUO3MLeyLuOj0pXh2cpw5VNS3hiflv\r\nWl8cMlh5h4pp4lAI4u+ML+7YK8gc7Blk6y6GYDVFrR4KggpOPIi78Z7VeuD6w0Wu\r\n7PS5sclj7g4Lk1PxnS4G0uIOAm+mvUcUrNZFN4it5is3smSG9Mp6YLh+5/VMHT4/\r\nH86aqd3dVgIaTz8kcnbOAGBBjjn1YsZuf7UsbPf3ObOG3+NpE/Rk1b/s3nRkNFdZ\r\nx4K4D+9dujIJfZ6nNn61RL3LqUm6eAt6qDr/1quiNiNLND1rk0X+ojJ/LaHvBMD3\r\nxxSm5IMRMhEbENchcJLAVsnjDuEjhlMa98dnFQIDAQABAoIBAQChHoJuvS3sD5Mz\r\ndhYekFq67zbz4L+Dpx8G2HO7lzL3Z3bnOZBAQuv4a0LQVA7xxNIbB35W5Dnl7RHk\r\nGGNXUDWyB4In/2sD8IAOf8Oz5s6thLo9hJukLykGDWS640RZ8UjXtpiue9TrDUCX\r\nk0Cns02cs+yonaJSCe4IJoUzn/kF/ormTd3AbMNSCS/fGCVEgDE+0Gzfw4eFhVXP\r\nhwuR8rVi8q7sGI5FViG5Gm1D+Ic5/9FEg8iwsjCUpInr8ZlX6vQNerh5jupvc8n2\r\ntjCckcaYlEajhXfxiza5VGyDvA19glDLp/gsrDmdy3EbEbYhrnLJZ/Hq7sxqOKmA\r\nB3d0R/gBAoGBAOnW6Lfq8gkX0Wux2RbYRtCWIwwTQktR8k1Xqa2z+qJZC5Pclz6o\r\ncDL3Ebqr5XsobOZTEffLmutF6PJeUMt9QKTCJy34G2Ua7HldTdwnQIdwFrmx2REQ\r\nxpJr0qs79H91MYA2KE8D7m9kxT/AvtLHs3uqn5U3twBhICVeJIfbEBSVAoGBAMDv\r\nmJdmCZ7a4vT208xcpO9jqRM5ssFwKc1QdliJ+K8A5rkhKK4EZhKectSxFWBAMZbH\r\nj/Gg3mCpdnRP8+HtjJlCj++roGJKWe7EtLwk6xND/sDvkTCFT75sDkc/TrDxeKkg\r\n+D9lY3oO56S9cq5WEwiTF/wGRbLWeeWpxpkCbuiBAoGBAIj2maRv9ogg7Ua5CsB4\r\nuTGfXrPJ7ACV5OgsOnRFgL3qjf9zKxtGKUGQuU+vM2Bpky9s5I9RMFIxxnl/iK9H\r\nk79tAOnJ8rHLjUqgveP/EarCmmz1oICAZO6KPQCSw2iMSgwgrIdrdBLG4UmwKZTn\r\n51a9327VDVkpilyYwajZRJfpAoGBAIDeCC/nybk/PqScUO+JWelDyeS7fzhRMLqg\r\nacvNrDtIANPa4A8LhRoel1iVR0/Y0MaDWRPtfVtXFXWvCZj4UBb2LKnLGv9L5jHj\r\nVUzt484kdn5sBbBA+viXuBnCoU7ymsNs8CN4Fy+p0PNqTrU/bMsnZLfDgL5pH1ZV\r\nRf9hbq8BAoGAD8gHbkY3D87fkgoTRqdNh2+AUc7Y5aBsUkxhLC3o1ltTCZJ4Ly6c\r\n593+wvLvqI1iZUQ5cPXzMOp1mLtsD+K/o2vvJqiIvU6DU4cYfthknPGZ+1bSezVf\r\nSbXO3+G0vXtbDk1RjCs98Od0Q1Nzur0OUDU9+r0faIjrl36WsAvGJEA=\r\n-----END RSA PRIVATE KEY-----\r\n-----BEGIN CERTIFICATE-----\r\nMIIDwTCCAqmgAwIBAgIULPG5KdtzvUPbggZAjQwwc+wrQZswDQYJKoZIhvcNAQEL\r\nBQAwbzELMAkGA1UEBhMCSlAxDjAMBgNVBAgMBVRva3lvMRIwEAYDVQQHDAlNaW5h\r\ndG8ta3UxGDAWBgNVBAoMD05FQyBDb3Jwb3JhdGlvbjEMMAoGA1UECwwDUFhSMRQw\r\nEgYDVQQDDAsqLnB4ci5jby5qcDAgFw0yMDAzMjYxMjM3MDJaGA8yMTIwMDMwMjEy\r\nMzcwMlowbzELMAkGA1UEBhMCSlAxDjAMBgNVBAgMBVRva3lvMRIwEAYDVQQHDAlN\r\naW5hdG8ta3UxGDAWBgNVBAoMD05FQyBDb3Jwb3JhdGlvbjEMMAoGA1UECwwDUFhS\r\nMRQwEgYDVQQDDAsqLnB4ci5jby5qcDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\r\nAQoCggEBALA8CY8ZDsElrn2n0b0RFDtzC3si7jo9KV4dnKcOVTUt4Yn5b1pfHDJY\r\neYeKaeJQCOLvjC/u2CvIHOwZZOsuhmA1Ra0eCoIKTjyIu/Ge1Xrg+sNFruz0ubHJ\r\nY+4OC5NT8Z0uBtLiDgJvpr1HFKzWRTeIreYrN7JkhvTKemC4fuf1TB0+Px/Omqnd\r\n3VYCGk8/JHJ2zgBgQY459WLGbn+1LGz39zmzht/jaRP0ZNW/7N50ZDRXWceCuA/v\r\nXboyCX2epzZ+tUS9y6lJungLeqg6/9arojYjSzQ9a5NF/qIyfy2h7wTA98cUpuSD\r\nETIRGxDXIXCSwFbJ4w7hI4ZTGvfHZxUCAwEAAaNTMFEwHQYDVR0OBBYEFH1wO/lR\r\nGxFwgiP20dva7YZysZVDMB8GA1UdIwQYMBaAFH1wO/lRGxFwgiP20dva7YZysZVD\r\nMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBADL0jLXKzstpXMnn\r\nUhlr9AFxaA5n3sArc081n+HfYjY4vZwj5wnLRoy5xeYmHHEQ5lBwMHrS0MbsjMR2\r\njWIKcAhkD5KA6JrGoqqqUx30uToKVkWiwRjxxcMVOAsnBXa4V4Mvyi6sY/OTwic7\r\nIW3H6+UtcEXXpy199Q2GAhBg7Fb23+D8JaiDXG5hccB2J6hP9t8C2fWxKIokp2J4\r\n773pjj9Ke+ibjZ7GeaD4HYMMd30zVHJllRdVV7gpRCoyUKoNwkS722A5ZykUGldL\r\nv0DJpYdnexHNJWm5Bi8rubmeIIETI0VC8oYzYJCj1O3AK0DVkW2HPjpTxjuQZr7p\r\nl28YZGM=\r\n-----END CERTIFICATE-----\r\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/check/client": {
          "get": {
            "tags": [
              "証明書確認"
            ],
            "description": "クライアント証明書の確認を確認する。",
            "responses": {
              "200": {
                "description": "証明書の保存に成功した際のレスポンスコード",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "description": "レスポンス",
                      "properties": {
                        "isExist": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/{serialNo}/{fingerPrint}": {
          "delete": {
            "tags": [
              "証明書失効"
            ],
            "description": "シリアル番号、フィンガープリントを受け、失効します。",
            "parameters": [
              {
                "name": "serialNo",
                "description": "シリアル番号",
                "in": "path",
                "schema": {
                  "type": "string"
                },
                "required": true,
                "example": "70F3C323BDEFDC1BFC9EBAA3CCE7EB257837BB61"
              },
              {
                "name": "fingerPrint",
                "description": "フィンガープリント",
                "in": "path",
                "schema": {
                  "type": "string"
                },
                "required": true,
                "example": "85:EF:19:FE:99:97:3A:69:81:F5:28:ED:57:55:22:8A:59:AB:E5:5F"
              }
            ],
            "responses": {
              "200": {
                "description": "成功した際のレスポンスコード",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "description": "レスポンス",
                      "properties": {
                        "result": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ormconfig.json: |
    {
      "name": "postgres",
      "type": "postgres",
      "host": "external-db-service",
      "port": 5432,
      "database": "<database_name>",
      "schema": "pxr_certificate_manage",
      "username": "<user_name>",
      "password": "<password>",
      "synchronize": false,
      "logging": false
    }
  .env: |
    URL=http://localhost:3012/certificate-authority/client/cert-chain
    DB_USER=<user_name>
    DB_PASSWORD=<password>
    DB_HOST=external-db-service
    DB_PORT=5432
    DB_SCHEMA=pxr_certificate_manage
    DB_NAME=<database_name>
